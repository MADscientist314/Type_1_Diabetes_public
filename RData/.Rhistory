labels=c(paste0("VST ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI),paste0("Normalized ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI)))#,
print(p2)
ggsave(plot = p2,filename = paste0(SAMTYPE,"_",ORD,"_Weighted_",UNI,".png"),path = "cowplots",device = "png",height = 8,width=12,units = "in",dpi = 600)
}
lapply(X=levels(sam$SampleType),FUN =  function(X){
lapply(X = c(TRUE,FALSE),FUN =  function(Y){
lapply(X = c("PCoA"),FUN = function(Z){
#lapply(X = c("disease","Delivery","controlled"),FUN = function(A){
ordme(SAMTYPE = X,UNI = Y,ORD = Z)})})})
ordme<-function(SAMTYPE,UNI,ORD){
print(paste0(SAMTYPE,", Weighted = ",UNI,", Ordination= ",ORD))
tmp<-ASV_physeq_core
manifest<-sam%>%mutate(keep=SampleType==SAMTYPE)
sample_data(tmp)<-sample_data(manifest)
tmp<-subset_samples(physeq = tmp, keep=="TRUE")
# ###### VST stuff ########
# Run DESEQ2 VST normalaiztion
deseq_counts<- phyloseq_to_deseq2(physeq = tmp,design = ~1)
deseq_counts <- estimateSizeFactors(deseq_counts, type = "poscounts")
deseq_counts_vst <- varianceStabilizingTransformation(deseq_counts)
# and here is pulling out our transformed table
vst_trans_count_tab <- assay(deseq_counts_vst)
# and calculating our Euclidean distance matrix
euc_dist <- dist(t(vst_trans_count_tab))
euc_clust <- hclust(euc_dist, method="ward.D2")
# making our phyloseq object with transformed table
vst_count_phy <- otu_table(vst_trans_count_tab, taxa_are_rows=T)
sample_info_tab_phy <- sample_data(tmp)
vst_tmp <- phyloseq(vst_count_phy, tax_table(tmp),sample_info_tab_phy,phy_tree(tmp))
#tmp<-prune_taxa(taxa = taxa_sums(tmp) > 0,x = tmp)
#vst_tmp<-prune_taxa(taxa = taxa_sums(vst_tmp) > 0,x = tmp)
unifrac<-UniFrac(physeq = tmp,
normalized = T,
parallel = T,
weighted = UNI)
vst_unifrac<-UniFrac(physeq = vst_tmp,
normalized = F,
parallel = T,
weighted = UNI)
tmp_ord<-ordinate(physeq = tmp,method = ORD,distance = unifrac)
vst_tmp_ord<-ordinate(physeq = vst_tmp,method = ORD,distance = vst_unifrac)
p<-plot_ordination(tmp, tmp_ord,justDF = T)
#colnames(p)<-c("Axis.1","Axis.2","SampleID","patient","disease","Host","SampleType","HbA1C_1trym_2","Delivery","controlled","keep")
vp<-plot_ordination(vst_tmp, vst_tmp_ord,justDF = T)
#colnames(vp)<-c("Axis.1","Axis.2","SampleID","patient","disease","Host","SampleType","HbA1C_1trym_2","Delivery","controlled","keep")
disease_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=disease,shape =disease,group=disease))+
geom_point(size=1) +
#stat_ellipse(type = "norm")+
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Diabetes"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
Delivery_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=Delivery,shape =Delivery,group=Delivery))+
geom_point(size=1) +
#stat_ellipse(type = "norm")+
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Delivery Mode"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
controlled_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=controlled,shape =controlled,group=controlled))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("1st Trimester HbA1c > 7.2"))+
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
disease_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=disease,shape =disease,group=disease))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Diabetes"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
Delivery_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=Delivery,shape =Delivery,group=Delivery))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Delivery Mode"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
controlled_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=controlled,shape =controlled,group=controlled))+
geom_point(size=1) +
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("1st Trimester HbA1c > 7.2"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
p2<-cowplot::plot_grid(disease_vp,Delivery_vp,controlled_vp,
nrow = 1,
labels=c(paste0(SAMTYPE," ",ORD," Weighted UniFrac = ",UNI)))
# p2<-cowplot::plot_grid(disease_p,Delivery_p,controlled_p,disease_vp,Delivery_vp,controlled_vp,
#                        nrow = 2,
#                        label_y = c(0,1),
#                        label_x = c(1,0),
#                        labels=c(paste0("VST ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI),paste0("Normalized ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI)))#,
print(p2)
ggsave(plot = p2,filename = paste0(SAMTYPE,"_",ORD,"_Weighted_",UNI,".png"),path = "cowplots",device = "png",height = 8,width=12,units = "in",dpi = 600)
}
ordme<-function(SAMTYPE,UNI,ORD){
print(paste0(SAMTYPE,", Weighted = ",UNI,", Ordination= ",ORD))
tmp<-ASV_physeq_core
manifest<-sam%>%mutate(keep=SampleType==SAMTYPE)
sample_data(tmp)<-sample_data(manifest)
tmp<-subset_samples(physeq = tmp, keep=="TRUE")
# ###### VST stuff ########
# Run DESEQ2 VST normalaiztion
deseq_counts<- phyloseq_to_deseq2(physeq = tmp,design = ~1)
deseq_counts <- estimateSizeFactors(deseq_counts, type = "poscounts")
deseq_counts_vst <- varianceStabilizingTransformation(deseq_counts)
# and here is pulling out our transformed table
vst_trans_count_tab <- assay(deseq_counts_vst)
# and calculating our Euclidean distance matrix
euc_dist <- dist(t(vst_trans_count_tab))
euc_clust <- hclust(euc_dist, method="ward.D2")
# making our phyloseq object with transformed table
vst_count_phy <- otu_table(vst_trans_count_tab, taxa_are_rows=T)
sample_info_tab_phy <- sample_data(tmp)
vst_tmp <- phyloseq(vst_count_phy, tax_table(tmp),sample_info_tab_phy,phy_tree(tmp))
#tmp<-prune_taxa(taxa = taxa_sums(tmp) > 0,x = tmp)
#vst_tmp<-prune_taxa(taxa = taxa_sums(vst_tmp) > 0,x = tmp)
unifrac<-UniFrac(physeq = tmp,
normalized = T,
parallel = T,
weighted = UNI)
vst_unifrac<-UniFrac(physeq = vst_tmp,
normalized = F,
parallel = T,
weighted = UNI)
tmp_ord<-ordinate(physeq = tmp,method = ORD,distance = unifrac)
vst_tmp_ord<-ordinate(physeq = vst_tmp,method = ORD,distance = vst_unifrac)
p<-plot_ordination(tmp, tmp_ord,justDF = T)
#colnames(p)<-c("Axis.1","Axis.2","SampleID","patient","disease","Host","SampleType","HbA1C_1trym_2","Delivery","controlled","keep")
vp<-plot_ordination(vst_tmp, vst_tmp_ord,justDF = T)
#colnames(vp)<-c("Axis.1","Axis.2","SampleID","patient","disease","Host","SampleType","HbA1C_1trym_2","Delivery","controlled","keep")
disease_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=disease,shape =disease,group=disease))+
geom_point(size=1) +
#stat_ellipse(type = "norm")+
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Diabetes"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
Delivery_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=Delivery,shape =Delivery,group=Delivery))+
geom_point(size=1) +
#stat_ellipse(type = "norm")+
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Delivery Mode"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
controlled_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=controlled,shape =controlled,group=controlled))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("1st Trimester HbA1c > 7.2"))+
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
disease_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=disease,shape =disease,group=disease))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Diabetes"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
Delivery_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=Delivery,shape =Delivery,group=Delivery))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Delivery Mode"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
controlled_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=controlled,shape =controlled,group=controlled))+
geom_point(size=1) +
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("1st Trimester HbA1c > 7.2"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
p2<-cowplot::plot_grid(disease_vp,Delivery_vp,controlled_vp,
nrow = 1,
labels=c(paste0(SAMTYPE," ",ORD," Weighted UniFrac = ",UNI)))
# p2<-cowplot::plot_grid(disease_p,Delivery_p,controlled_p,disease_vp,Delivery_vp,controlled_vp,
#                        nrow = 2,
#                        label_y = c(0,1),
#                        label_x = c(1,0),
#                        labels=c(paste0("VST ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI),paste0("Normalized ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI)))#,
print(p2)
ggsave(plot = p2,filename = paste0(SAMTYPE,"_",ORD,"_Weighted_",UNI,".png"),path = "cowplots",device = "png",height = 8,width=12,units = "in",dpi = 600)
}
lapply(X=levels(sam$SampleType),FUN =  function(X){
lapply(X = c(TRUE,FALSE),FUN =  function(Y){
lapply(X = c("PCoA"),FUN = function(Z){
#lapply(X = c("disease","Delivery","controlled"),FUN = function(A){
ordme(SAMTYPE = X,UNI = Y,ORD = Z)})})})
ordme<-function(SAMTYPE,UNI,ORD){
print(paste0(SAMTYPE,", Weighted = ",UNI,", Ordination= ",ORD))
tmp<-ASV_physeq_core
manifest<-sam%>%mutate(keep=SampleType==SAMTYPE)
sample_data(tmp)<-sample_data(manifest)
tmp<-subset_samples(physeq = tmp, keep=="TRUE")
# ###### VST stuff ########
# Run DESEQ2 VST normalaiztion
deseq_counts<- phyloseq_to_deseq2(physeq = tmp,design = ~1)
deseq_counts <- estimateSizeFactors(deseq_counts, type = "poscounts")
deseq_counts_vst <- varianceStabilizingTransformation(deseq_counts)
# and here is pulling out our transformed table
vst_trans_count_tab <- assay(deseq_counts_vst)
# and calculating our Euclidean distance matrix
euc_dist <- dist(t(vst_trans_count_tab))
euc_clust <- hclust(euc_dist, method="ward.D2")
# making our phyloseq object with transformed table
vst_count_phy <- otu_table(vst_trans_count_tab, taxa_are_rows=T)
sample_info_tab_phy <- sample_data(tmp)
vst_tmp <- phyloseq(vst_count_phy, tax_table(tmp),sample_info_tab_phy,phy_tree(tmp))
#tmp<-prune_taxa(taxa = taxa_sums(tmp) > 0,x = tmp)
#vst_tmp<-prune_taxa(taxa = taxa_sums(vst_tmp) > 0,x = tmp)
unifrac<-UniFrac(physeq = tmp,
normalized = T,
parallel = T,
weighted = UNI)
vst_unifrac<-UniFrac(physeq = vst_tmp,
normalized = F,
parallel = T,
weighted = UNI)
tmp_ord<-ordinate(physeq = tmp,method = ORD,distance = unifrac)
vst_tmp_ord<-ordinate(physeq = vst_tmp,method = ORD,distance = vst_unifrac)
p<-plot_ordination(tmp, tmp_ord,justDF = T)
#colnames(p)<-c("Axis.1","Axis.2","SampleID","patient","disease","Host","SampleType","HbA1C_1trym_2","Delivery","controlled","keep")
vp<-plot_ordination(vst_tmp, vst_tmp_ord,justDF = T)
#colnames(vp)<-c("Axis.1","Axis.2","SampleID","patient","disease","Host","SampleType","HbA1C_1trym_2","Delivery","controlled","keep")
disease_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=disease,shape =disease,group=disease))+
geom_point(size=1) +
#stat_ellipse(type = "norm")+
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Diabetes"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
Delivery_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=Delivery,shape =Delivery,group=Delivery))+
geom_point(size=1) +
#stat_ellipse(type = "norm")+
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Delivery Mode"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
controlled_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=controlled,shape =controlled,group=controlled))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("1st Trimester HbA1c > 7.2"))+
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
disease_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=disease,shape =disease,group=disease))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Diabetes"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
Delivery_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=Delivery,shape =Delivery,group=Delivery))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Delivery Mode"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
controlled_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=controlled,shape =controlled,group=controlled))+
geom_point(size=1) +
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("1st Trimester HbA1c > 7.2"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
geom_smooth(se = F,method = "glm")+
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
p2<-cowplot::plot_grid(disease_vp,Delivery_vp,controlled_vp,
nrow = 1,
labels=c(paste0(SAMTYPE," ",ORD," Weighted UniFrac = ",UNI)))
# p2<-cowplot::plot_grid(disease_p,Delivery_p,controlled_p,disease_vp,Delivery_vp,controlled_vp,
#                        nrow = 2,
#                        label_y = c(0,1),
#                        label_x = c(1,0),
#                        labels=c(paste0("VST ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI),paste0("Normalized ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI)))#,
print(p2)
ggsave(plot = p2,filename = paste0(SAMTYPE,"_",ORD,"_Weighted_",UNI,".png"),path = "cowplots",device = "png",height = 8,width=12,units = "in",dpi = 600)
}
lapply(X=levels(sam$SampleType),FUN =  function(X){
lapply(X = c(TRUE,FALSE),FUN =  function(Y){
lapply(X = c("PCoA"),FUN = function(Z){
#lapply(X = c("disease","Delivery","controlled"),FUN = function(A){
ordme(SAMTYPE = X,UNI = Y,ORD = Z)})})})
ordme<-function(SAMTYPE,UNI,ORD){
print(paste0(SAMTYPE,", Weighted = ",UNI,", Ordination= ",ORD))
tmp<-ASV_physeq_core
manifest<-sam%>%mutate(keep=SampleType==SAMTYPE)
sample_data(tmp)<-sample_data(manifest)
tmp<-subset_samples(physeq = tmp, keep=="TRUE")
# ###### VST stuff ########
# Run DESEQ2 VST normalaiztion
deseq_counts<- phyloseq_to_deseq2(physeq = tmp,design = ~1)
deseq_counts <- estimateSizeFactors(deseq_counts, type = "poscounts")
deseq_counts_vst <- varianceStabilizingTransformation(deseq_counts)
# and here is pulling out our transformed table
vst_trans_count_tab <- assay(deseq_counts_vst)
# and calculating our Euclidean distance matrix
euc_dist <- dist(t(vst_trans_count_tab))
euc_clust <- hclust(euc_dist, method="ward.D2")
# making our phyloseq object with transformed table
vst_count_phy <- otu_table(vst_trans_count_tab, taxa_are_rows=T)
sample_info_tab_phy <- sample_data(tmp)
vst_tmp <- phyloseq(vst_count_phy, tax_table(tmp),sample_info_tab_phy,phy_tree(tmp))
#tmp<-prune_taxa(taxa = taxa_sums(tmp) > 0,x = tmp)
#vst_tmp<-prune_taxa(taxa = taxa_sums(vst_tmp) > 0,x = tmp)
unifrac<-UniFrac(physeq = tmp,
normalized = T,
parallel = T,
weighted = UNI)
vst_unifrac<-UniFrac(physeq = vst_tmp,
normalized = F,
parallel = T,
weighted = UNI)
tmp_ord<-ordinate(physeq = tmp,method = ORD,distance = unifrac)
vst_tmp_ord<-ordinate(physeq = vst_tmp,method = ORD,distance = vst_unifrac)
p<-plot_ordination(tmp, tmp_ord,justDF = T)
#colnames(p)<-c("Axis.1","Axis.2","SampleID","patient","disease","Host","SampleType","HbA1C_1trym_2","Delivery","controlled","keep")
vp<-plot_ordination(vst_tmp, vst_tmp_ord,justDF = T)
#colnames(vp)<-c("Axis.1","Axis.2","SampleID","patient","disease","Host","SampleType","HbA1C_1trym_2","Delivery","controlled","keep")
disease_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=disease,shape =disease,group=disease))+
geom_point(size=1) +
#stat_ellipse(type = "norm")+
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Diabetes"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
Delivery_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=Delivery,shape =Delivery,group=Delivery))+
geom_point(size=1) +
#stat_ellipse(type = "norm")+
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Delivery Mode"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
controlled_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=controlled,shape =controlled,group=controlled))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("1st Trimester HbA1c > 7.2"))+
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
disease_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=disease,shape =disease,group=disease))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Diabetes"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
Delivery_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=Delivery,shape =Delivery,group=Delivery))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Delivery Mode"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
controlled_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=controlled,shape =controlled,group=controlled))+
geom_point(size=1) +
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("1st Trimester HbA1c > 7.2"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
geom_smooth(se = F,method = "glm")+
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
p2<-cowplot::plot_grid(disease_vp,Delivery_vp,controlled_vp,
nrow = 1,
labels=c(paste0(SAMTYPE," ",ORD," Weighted UniFrac = ",UNI)))
# p2<-cowplot::plot_grid(disease_p,Delivery_p,controlled_p,disease_vp,Delivery_vp,controlled_vp,
#                        nrow = 2,
#                        label_y = c(0,1),
#                        label_x = c(1,0),
#                        labels=c(paste0("VST ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI),paste0("Normalized ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI)))#,
print(p2)
ggsave(plot = p2,filename = paste0(SAMTYPE,"_",ORD,"_Weighted_",UNI,".png"),path = "cowplots",device = "png",height = 6,width=8,units = "in",dpi = 600)
}
lapply(X=levels(sam$SampleType),FUN =  function(X){
lapply(X = c(TRUE,FALSE),FUN =  function(Y){
lapply(X = c("PCoA"),FUN = function(Z){
#lapply(X = c("disease","Delivery","controlled"),FUN = function(A){
ordme(SAMTYPE = X,UNI = Y,ORD = Z)})})})
ordme<-function(SAMTYPE,UNI,ORD){
print(paste0(SAMTYPE,", Weighted = ",UNI,", Ordination= ",ORD))
tmp<-ASV_physeq_core
manifest<-sam%>%mutate(keep=SampleType==SAMTYPE)
sample_data(tmp)<-sample_data(manifest)
tmp<-subset_samples(physeq = tmp, keep=="TRUE")
# ###### VST stuff ########
# Run DESEQ2 VST normalaiztion
deseq_counts<- phyloseq_to_deseq2(physeq = tmp,design = ~1)
deseq_counts <- estimateSizeFactors(deseq_counts, type = "poscounts")
deseq_counts_vst <- varianceStabilizingTransformation(deseq_counts)
# and here is pulling out our transformed table
vst_trans_count_tab <- assay(deseq_counts_vst)
# and calculating our Euclidean distance matrix
euc_dist <- dist(t(vst_trans_count_tab))
euc_clust <- hclust(euc_dist, method="ward.D2")
# making our phyloseq object with transformed table
vst_count_phy <- otu_table(vst_trans_count_tab, taxa_are_rows=T)
sample_info_tab_phy <- sample_data(tmp)
vst_tmp <- phyloseq(vst_count_phy, tax_table(tmp),sample_info_tab_phy,phy_tree(tmp))
#tmp<-prune_taxa(taxa = taxa_sums(tmp) > 0,x = tmp)
#vst_tmp<-prune_taxa(taxa = taxa_sums(vst_tmp) > 0,x = tmp)
unifrac<-UniFrac(physeq = tmp,
normalized = T,
parallel = T,
weighted = UNI)
vst_unifrac<-UniFrac(physeq = vst_tmp,
normalized = F,
parallel = T,
weighted = UNI)
tmp_ord<-ordinate(physeq = tmp,method = ORD,distance = unifrac)
vst_tmp_ord<-ordinate(physeq = vst_tmp,method = ORD,distance = vst_unifrac)
p<-plot_ordination(tmp, tmp_ord,justDF = T)
#colnames(p)<-c("Axis.1","Axis.2","SampleID","patient","disease","Host","SampleType","HbA1C_1trym_2","Delivery","controlled","keep")
vp<-plot_ordination(vst_tmp, vst_tmp_ord,justDF = T)
#colnames(vp)<-c("Axis.1","Axis.2","SampleID","patient","disease","Host","SampleType","HbA1C_1trym_2","Delivery","controlled","keep")
disease_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=disease,shape =disease,group=disease))+
geom_point(size=1) +
#stat_ellipse(type = "norm")+
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Diabetes"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
Delivery_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=Delivery,shape =Delivery,group=Delivery))+
geom_point(size=1) +
#stat_ellipse(type = "norm")+
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Delivery Mode"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
controlled_p<-ggplot(p,mapping = aes(x = Axis.1,y=Axis.2,color=controlled,shape =controlled,group=controlled))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(tmp_ord$values$Eigenvalues[2]/tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("1st Trimester HbA1c > 7.2"))+
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
disease_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=disease,shape =disease,group=disease))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Diabetes"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=rev(my_pal))+
theme_cowplot() + theme(legend.position="top")
Delivery_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=Delivery,shape =Delivery,group=Delivery))+
geom_point(size=1) +
geom_smooth(se = F,method = "glm")+
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("Delivery Mode"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
controlled_vp<-ggplot(vp,mapping = aes(x = Axis.1,y=Axis.2,color=controlled,shape =controlled,group=controlled))+
geom_point(size=1) +
coord_fixed(sqrt(vst_tmp_ord$values$Eigenvalues[2]/vst_tmp_ord$values$Eigenvalues[1])) +
ggtitle(paste0("1st Trimester HbA1c > 7.2"))+#ANN," ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI," ")) +
geom_smooth(se = F,method = "glm")+
scale_color_manual(values=my_pal)+
theme_cowplot() + theme(legend.position="top")
p2<-cowplot::plot_grid(disease_vp,Delivery_vp,controlled_vp,
nrow = 1,
labels=c(paste0(SAMTYPE," ",ORD," Weighted UniFrac = ",UNI)))
# p2<-cowplot::plot_grid(disease_p,Delivery_p,controlled_p,disease_vp,Delivery_vp,controlled_vp,
#                        nrow = 2,
#                        label_y = c(0,1),
#                        label_x = c(1,0),
#                        labels=c(paste0("VST ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI),paste0("Normalized ",ORD," ",SAMTYPE," Weighted UniFrac = ",UNI)))#,
print(p2)
ggsave(plot = p2,filename = paste0(SAMTYPE,"_",ORD,"_Weighted_",UNI,".png"),path = "cowplots",device = "png",height = 4,width=12,units = "in",dpi = 600)
}
lapply(X=levels(sam$SampleType),FUN =  function(X){
lapply(X = c(TRUE,FALSE),FUN =  function(Y){
lapply(X = c("PCoA"),FUN = function(Z){
#lapply(X = c("disease","Delivery","controlled"),FUN = function(A){
ordme(SAMTYPE = X,UNI = Y,ORD = Z)})})})
geom_density_ridges()
mom
mom<-as_tibble(sam)%>%
select(patient,
disease,
Host,
tydzien_porodu_2,
newborn_weight,
energ_tluszcz_proc_2,
energ_bialko_proc_2,
HbA1C_1trym_2,
HbA1C_2trym_2,
HBA1C_POROD_2,
BMI_after_2,
BMI_before_2,
insulin_age,
insulin_how_long)%>%
filter(Host=="Mother")%>%
distinct_all()
mom
mom<-mom%>%mutate(across(where(is.character),factor))%>%
mutate(patient=as.factor(patient))
mom_T1d<-mom%>%filter(disease=="T1D")
mom_T1d
favstats(mom_T1d$HbA1C_1trym_2)
mom_T1d<-mom%>%filter(disease=="Control")
favstats(mom_T1d$HbA1C_1trym_2)
mom_T1d<-mom%>%filter(disease!="T1D")%>%select(patient,HbA1C_1trym_2)%>%distinct_all
favstats(mom_T1d$HbA1C_1trym_2)
getwd()
