ear_Cervix
ear_Cervix_Csection<-ear_Cervix%>%filter(Delivery==("Csection"))
ear_Cervix_Csection
hist(x = ear_Cervix_Csection$contribution)
library(ggpubr)
gghistogram(data = ear_Cervix_Csection,x=contribution)
gghistogram(data = ear_Cervix_Csection,x="contribution")
gghistogram(data = ear_Cervix_Csection,x="contribution")
gghistogram(data = ear_Cervix_Csection,x="contribution",color = "disease")
gghistogram(data = ear_Cervix_Csection,x="contribution",color = "disease",bins = 25)
ear_Cervix_Csection_disease<-ear_Cervix_Csection%>%
wilcox.test(contribution~disease,data = ear_Cervix_Csection)
ear_Cervix_Csection_disease<-ear_Cervix_Csection%>%
wilcox.test(disease~contribution,data = ear_Cervix_Csection)
hsb2 <- within(read.csv("https://stats.idre.ucla.edu/stat/data/hsb2.csv"), {
race <- as.factor(race)
schtyp <- as.factor(schtyp)
prog <- as.factor(prog)
})
attach(hsb2)
write
female
hsb2
model <- lm(contribution ~  disease, data = ear_Cervix)
model <- lm(contribution ~  disease, data = df2)
analysis <- Anova(model, idata = df2, idesign = ~patient)
print(analysis)
model <- msummary(aov(lm(contribution ~  disease, data = df2)))
model
model <- aov(lm(contribution ~  disease, data = df2))
model
model <- Anova(lm(contribution ~  disease, data = df2))
model
model <- Anova(lm(contribution ~  Delivery, data = df2))
model
model <- Anova(contribution ~  Delivery, data = df2))
model <- Anova(contribution ~  Delivery, data = df2)
model
model <- aov(contribution ~  Delivery, data = df2)
model
model <- msummary(aov(contribution ~  Delivery, data = df2))
model
model <- summary(aov(contribution ~  Delivery, data = df2))
model
analysis <- Anova(model, idata = df2, idesign = ~patient)
df2
model <- summary(aov(contribution ~  Source, data = df2))
model
model <- summary(aov(contribution ~  Source*Sink, data = df2))
model
df3
model <- summary(aov(contribution ~  env, data = df2))
model
model <- summary(aov(contribution ~  env, data = df2))
model <- summary(aov(lm(contribution ~  env, data = df2)))
model
df3
df4
model <- summary(aov(lm(contribution ~  id, data = df4)))
model
TukeyHSD(model)
df4
df2
df_slim<-df2%>%select(SampleID,patient,contribution)
df_slim
df_slim<-df2%>%select(SampleID,patient,disease,Delivery,Antibiotics,contribution)
df_slim
t.test(write, read, paired = TRUE)
read
write
df_slim
model <- lm(contibution ~ disease + patient, data = df_slim)
model <- lm(contribution ~ disease + patient, data = df_slim)
analysis <- Anova(model, idata = df_slim, idesign = ~patient)
model <- lm(contribution ~ disease + patient, data = df_slim)
analysis <- Anova(model, idata = df_slim, idesign = ~patient)
print(analysis)
df_slim
model <- lm(contribution ~ disease *Delivery+ patient, data = df_slim)
analysis <- Anova(model, idata = df_slim, idesign = ~patient)
print(analysis)
model <- lm(contribution ~ ., data = df_slim)
analysis <- Anova(model, idata = df_slim, idesign = ~patient)
print(analysis)
library(lme4)
glmer(contibution ~ disease + (1 | patient), data = df_slim, family = gaussian)
glmer(contribution ~ disease + (1 | patient), data = df_slim, family = gaussian)
ses
glmeree<-glmer(contribution ~ disease + (1 | patient), data = df_slim, family = gaussian)
summary(glmeree)
msummary(glmeree)
msummary(aov(glmeree))
aov(glmeree))
aov(glmeree)
aanova(glmeree)
anova(glmeree)
Anova(glmeree)
Anova(contribution ~ disease + (1 | patient), data = df_slim)
aov(contribution ~ disease + (1 | patient), data = df_slim)
glmeree<-glmer(contribution ~ disease *Delivery + (1 | patient), data = df_slim, family = gaussian)
glmeree<-glmer(contribution ~ disease *Delivery + (1 | patient), data = df_slim)
glmeree
summary(glmeree)
#logistic regression
logit_mod <- glm(contribution ~ disease,
data = df_slim)
msummary(logit_mod)
#logistic regression
logit_mod <- glm(contribution ~ disease*Delivery,
data = df_slim)
msummary(logit_mod)
tidy(logit_mod, conf.int = TRUE,
exponentiate = TRUE)
df2
#logistic regression
logit_mod <- glm(contribution ~ disease*Delivery,
data = df2)
msummary(logit_mod)
#logistic regression
logit_mod <- glm(contribution ~ disease*Delivery+ (1 | patient),
data = df2)
#logistic regression
logit_mod <- glm(contribution ~ disease+ (1 | patient),
data = df2)
glmeree<-glmer(contribution ~ disease *Delivery + (1 | patient), data = df_slim)
summary(glmeree)
tidy(glmeree, conf.int = TRUE,
exponentiate = TRUE)
glmeree<-glmer(contribution ~ disease  + (1 | patient), data = df_slim)
summary(glmeree)
glmeree<-glmer(contribution ~ disease  + (1 | patient), data = df_slim,family = "binomial")
summary(glmeree)
glmeree<-glmer(contribution ~ disease  + (1 | patient), data = df_slim)
summary(glmeree)
glmeree<-glmer(contribution ~ disease  + (1 | patient), data = df_slim,family = "gaussian")
summary(glmeree)
glmeree<-glmer(contribution ~ disease  + (1 | patient), data = df_slim,family = "quasibinomial")
summary(glmeree)
glmeree<-glmer(contribution ~ disease  + (1 | patient), data = df_slim,family = "quasi")
summary(glmeree)
glmeree<-glmer(contribution ~ disease  + (1 | patient), data = df_slim,family = "poisson")
summary(glmeree)
glmeree<-glmer(contribution ~ disease  + (1 | patient), data = df_slim,family = "binomial")
summary(glmeree)
glmeree<-glmer(contribution ~ disease *delivery + (1 | patient), data = df_slim,family = "binomial")
glmeree<-glmer(contribution ~ disease *Delivery + (1 | patient), data = df_slim,family = "binomial")
summary(glmeree)
df_slim
glmeree<-glmer(contribution ~ . + (1 | patient), data = df_slim,family = "binomial")
glmeree<-glmer(contribution ~ disease *Delivery* Antibiotics + (1 | patient), data = df_slim,family = "binomial")
summary(glmeree)
df
df<-as_tibble(read.table("sourcetracker_results2.txt",header = T,sep = "\t"))%>%
rename(patient=Description)%>%
rename(disease=Study)%>%
rename(Sink=SampleType)%>%
mutate(across(where(is.character),factor))
library(tidyverse)
library(ggpubr)
df
df<-as_tibble(read.table("sourcetracker_results2.txt",header = T,sep = "\t"))%>%
rename(patient=Description)%>%
rename(disease=Study)%>%
rename(Sink=SampleType)%>%
mutate(across(where(is.character),factor))
df
df<-as_tibble(read.table("sourcetracker_results2.txt",header = T,sep = "\t"))%>%
rename(patient=Description)%>%
rename(disease=Study)%>%
rename(Sink=SampleType)%>%
mutate(across(where(is.character),factor))
df
df2<-as_tibble(read.table("sourcetracker_results2.txt",header = T,sep = "\t"))%>%
rename(patient=Description)%>%
rename(disease=Study)%>%
rename(Sink=SampleType)%>%
select(SampleID,patient,disease,Sink,Delivery,Antibiotics,
Anus,Cervix,Introitus,Vagina,Unknown)%>%
pivot_longer(cols =-c(SampleID,patient,disease,Sink,Delivery,Antibiotics),
names_to = "Source",
values_to = "contribution")%>%mutate(across(where(is.character),factor))
setwd("K:/github/Type_1_Diabetes_public/RData/sourcetracker/")
#sourcetracker2 input stuff
rm(list = ls())
df2<-as_tibble(read.table("sourcetracker_results.txt",header = T,sep = "\t"))
df2<-df2%>%mutate(patient=Description,
disease=Study,
Sink=SampleType)%>%
select(SampleID,patient,disease,Sink,Delivery,Antibiotics,
Anus,Cervix,Introitus,Vagina,Unknown)%>%
pivot_longer(cols =-c(SampleID,patient,disease,Sink,Delivery,Antibiotics),
names_to = "Source",
values_to = "contribution")
df2
df3<-df2%>%
pivot_longer(cols = c(Source,Sink),names_to="env",values_to="type.label")%>%
select(-c(SampleID,patient))%>%group_by(disease,Delivery,Antibiotics,env,type.label)%>%
summarise(contribution=mean(contribution))%>%ungroup()
df3
df2
wilcox.test(contribution ~ disease,data = df2)
wilcox.test(contribution ~ disease=="T1D",data = df2)
wilcox.test(contribution ~ disease=="Control",data = df2)
wilcox.test(contribution ~ Source=="Cervix"+disease=="T1D",data = df2)
lapply(unique(df2$Sink), function(si){
lapply(unique(df2$Source),FUN = function(so){
lapply(unique(df2$Delivery),
function(de){
tmp<-df2%>%
filter(Sink==si)%>%
filter(Source==so)%>%
filter(Delivery==de)
wilcox.test(contribution ~ disease,data = tmp)
})})})
library(broom)
lapply(unique(df2$Sink), function(si){
lapply(unique(df2$Source),function(so){
lapply(unique(df2$Delivery), function(de){
tmp<-df2%>%
filter(Sink==si)%>%
filter(Source==so)%>%
filter(Delivery==de)
tidy(wilcox.test(contribution ~ disease,data = tmp))
})})})
tidy(wilcox.test(contribution ~ disease,data = tmp))%>%
mutate(Sink=si,Source=so,Delivery=de)
lapply(unique(df2$Sink), function(si){
lapply(unique(df2$Source),function(so){
lapply(unique(df2$Delivery), function(de){
tmp<-df2%>%
filter(Sink==si)%>%
filter(Source==so)%>%
filter(Delivery==de)
tidy(wilcox.test(contribution ~ disease,data = tmp))%>%
mutate(Sink=si,Source=so,Delivery=de)
})})})
lapply(unique(df2$Source),function(so){
tmp<-df2%>%
filter(Sink==si)%>%
filter(Source==so)%>%
filter(Delivery==de)
tidy(Anova(lm(contribution ~ disease*Delivery,data = tmp)))%>%
mutate(Sink=si,Source=so)
})})})
lapply(unique(df2$Sink), function(si){
lapply(unique(df2$Source),function(so){
tmp<-df2%>%
filter(Sink==si)%>%
filter(Source==so)%>%
filter(Delivery==de)
tidy(Anova(lm(contribution ~ disease*Delivery,data = tmp)))%>%
mutate(Sink=si,Source=so)
})})
lapply(unique(df2$Sink), function(si){
lapply(unique(df2$Source),function(so){
tmp<-df2%>%
filter(Sink==si)%>%
filter(Source==so)
tidy(Anova(lm(contribution ~ disease*Delivery,data = tmp)))%>%
mutate(Sink=si,Source=so)
})})
library(foreign)
lapply(unique(df2$Sink), function(si){
lapply(unique(df2$Source),function(so){
tmp<-df2%>%
filter(Sink==si)%>%
filter(Source==so)
tidy(Anova(lm(contribution ~ disease*Delivery,data = tmp)))%>%
mutate(Sink=si,Source=so)
})})
library(car)
lapply(unique(df2$Sink), function(si){
lapply(unique(df2$Source),function(so){
tmp<-df2%>%
filter(Sink==si)%>%
filter(Source==so)
tidy(Anova(lm(contribution ~ disease*Delivery,data = tmp)))%>%
mutate(Sink=si,Source=so)
})})
df2
ggboxplot(df2,x = "Source",y = "contribution",color = "Delivery"
ggboxplot(df2,x = "Source",y = "contribution",color = "Delivery")
ggboxplot(df2,x = "Source",y = "contribution",color = "Delivery")
ggboxplot(df2,x = "Source",y = "contribution",color = "Delivery")+stat_compare_means(comparisons = list(c("Csection","Vaginal")))
df2
ggboxplot(df2,x = "Delivery",y = "contribution",color = "Delivery")+stat_compare_means(comparisons = list(c("Vaginal","Csection")))
ggboxplot(df2,x = "Delivery",y = "contribution",color = "Delivery")+stat_compare_means(comparisons = list(c("Vaginal","Csection")))+facet_grid(~Source)
ggboxplot(df2,x = "Delivery",y = "contribution",color = "disease")+stat_compare_means(comparisons = list(c("T1D","Control")))+facet_grid(~Source)
ggboxplot(df2,x = "disease",y = "contribution",color = "disease")+stat_compare_means(comparisons = list(c("T1D","Control")))+facet_grid(~Source)
df3<-df2%>%mutate(var=paste0(disease,"_",Delivery))
ggboxplot(df2,x = "Delivery",y = "contribution",color = "var")+stat_compare_means(comparisons = list(c("Vaginal","Csection")))+facet_grid(~Source)
ggboxplot(df2,x = "var",y = "contribution",color = "var")+stat_compare_means(comparisons = list(c("Vaginal","Csection")))+facet_grid(~Source)
ggboxplot(df3,x = "var",y = "contribution",color = "var")+stat_compare_means(comparisons = list(c("Vaginal","Csection")))+facet_grid(~Source)
ggboxplot(df3,x = "var",y = "contribution",color = "var")+stat_compare_means(comparisons = list(c("Vaginal","Csection")))+facet_grid(~Source)+rotate_x_text()
ggboxplot(df3,x = "var",y = "contribution",color = "var")+stat_compare_means(comparisons = list(c("Vaginal","Csection")))+facet_grid(~Source)+rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "var")+stat_compare_means(comparisons = list(c("Vaginal","Csection")))+rotate_x_text(angle = 45)
df2
ggboxplot(df2,x = "disease",y = "contribution",color = "disease")+stat_compare_means(comparisons = list(c("T1D","Control")))+facet_grid(~sink)
ggboxplot(df2,x = "disease",y = "contribution",color = "disease")+stat_compare_means(comparisons = list(c("T1D","Control")))+facet_grid(~Sink)
ggboxplot(df2,x = "disease",y = "contribution",color = "var")+stat_compare_means(comparisons = list(c("T1D","Control")))+facet_grid(~Sink)
ggboxplot(df2,x = "disease",y = "contribution",color = "Delivery")+stat_compare_means(comparisons = list(c("T1D","Control")))+facet_grid(~Sink)
ggboxplot(df2,x = "disease",y = "var",color = "Delivery")+
stat_compare_means(comparisons = list(c("T1D","Control")))+facet_grid(~Sink)
ggboxplot(df2,x = "var",y = "contribution",color = "Delivery")+
stat_compare_means(comparisons = list(c("T1D","Control")))+facet_grid(~Sink)
ggboxplot(df2,x = "var",y = "contribution",color = "Delivery")+
#  stat_compare_means(comparisons = list(c("T1D","Control")))+
facet_grid(~Sink)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery")+
#  stat_compare_means(comparisons = list(c("T1D","Control")))+
facet_grid(~Sink)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery")+
#  stat_compare_means(comparisons = list(c("T1D","Control")))+
facet_grid(Source~Sink)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery")+
#  stat_compare_means(comparisons = list(c("T1D","Control")))+
facet_grid(Source~Sink)+rotate_x_text()
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery")+
#  stat_compare_means(comparisons = list(c("T1D","Control")))+
facet_grid(Source~Sink)+rotate_x_text(angle = 45)
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery")+
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery")+
stat_compare_means(comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Vaginal","Control_Csection")))+
facet_grid(Source~Sink)+
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery")+
stat_compare_means(comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Vaginal","Control_Csection")))+
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery")+
stat_compare_means(comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Csection")))+
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery")+
stat_compare_means(comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Csection")))+
facet_grid(~Source)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery")+
stat_compare_means(comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Csection")))+
facet_grid(~Source)+
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery",add = "jitter")+
stat_compare_means(comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Csection")))+
facet_grid(~Source)+
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery",add = "jitter")+
stat_compare_means(comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Csection")))+
facet_grid(Sink~Source)+
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery",add = "jitter")+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Csection")))+
facet_grid(Sink~Source)+
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "Delivery",add = "jitter")+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(Sink~Source)+
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "disease",add = "jitter")+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(Sink~Source)+
rotate_x_text(angle = 45)
df3<-df2%>%mutate(var=factor(paste0(disease,"_",Delivery),levels = c("T1D_Vaginal","T1D_Csection","Control_Vaginal","Control_Csection")))
df3
ggboxplot(df3,x = "var",y = "contribution",color = "disease",add = "jitter")+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(Sink~Source)+
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "disease",add = "jitter")+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(~Source)+
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "disease",add = "jitter")+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(~Sink)+
rotate_x_text(angle = 45)
ggboxplot(df3,x = "var",y = "contribution",color = "disease",add = "jitter")+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(~Sink)+yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "var",y = "contribution",color = "disease",add = "jitter")+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(~Sink)+yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "var",y = "contribution",color = "disease",add = "jitter",trim = T)+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(~Sink)+yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "var",y = "contribution",color = "disease",add = "jitter",trim = T)+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(~Sink)+#yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "var",y = "contribution",color = "disease",add = "jitter",trim = T,size = 0.5)+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(~Sink)+#yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "var",y = "contribution",color = "disease",add = "jitter",trim = T,add.params = list(size = 0.5))+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(~Sink)+#yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "var",y = "contribution",color = "disease",add = "jitter",trim = T,add.params = list(size = 0.5))+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D_Vaginal","T1D_Csection"),
c("Control_Vaginal","Control_Csection"),
c("T1D_Csection","Control_Csection"),
c("T1D_Vaginal","Control_Vaginal")))+
facet_grid(~Sink)+yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "disease",y = "contribution",color = "disease",add = "jitter",trim = T,add.params = list(size = 0.5))+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D","Control")))+
facet_grid(~Sink)+yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "disease",y = "contribution",color = "disease",add = "jitter",trim = T,add.params = list(size = 0.5))+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D","Control")))+
facet_grid(Delivery~Sink)+yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "disease",y = "contribution",color = "disease",add = "jitter",trim = T,add.params = list(size = 0.5))+
stat_compare_means(mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D","Control")))+
facet_grid(Delivery~Sink)+yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "disease",y = "contribution",color = "disease",add = "jitter",trim = T,add.params = list(size = 0.5))+
stat_compare_means(mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D","Control")))+
facet_grid(Delivery~Source+Sink)+yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "disease",y = "contribution",color = "disease",add = "jitter",trim = T,add.params = list(size = 0.5))+
stat_compare_means(mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D","Control")))+
facet_grid(Source~Delivery+Sink)+yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "disease",y = "contribution",color = "disease",add = "jitter",trim = T,add.params = list(size = 0.5))+
stat_compare_means(mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D","Control")))+
facet_grid(Source~Sink)+yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "disease",y = "contribution",color = "disease",add = "jitter",trim = T,add.params = list(size = 0.5))+
stat_compare_means(hide.ns = T,mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D","Control")))+
facet_grid(~Sink)+yscale("log10")+
rotate_x_text(angle = 45)
ggviolin(df3,x = "disease",y = "contribution",color = "disease",add = "jitter",trim = T,add.params = list(size = 0.5))+
stat_compare_means(mapping = aes(label = ..p.signif..),
comparisons = list(c("T1D","Control")))+
facet_grid(Delivery~Sink)+yscale("log10")+
rotate_x_text(angle = 45)
